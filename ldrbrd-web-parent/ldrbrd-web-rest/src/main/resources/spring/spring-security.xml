<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!--  
		server/auth/** should be ANONYMOUS
		server/css & other resources should be ANONYMOUS
		server/course & other services should be auth		
	 -->
<!--   IN PROGRESS AUTHENTICATION -->
	<context:component-scan base-package="com.gffny.ldrbrd.common.utils" />

	<security:http realm="ldrbrd protected API" use-expressions="true" auto-config="false" create-session="stateless" entry-point-ref="LdrbrdAuthenticationEntryPoint">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/auth/*"
			access="permitAll" />
		<security:intercept-url pattern="/check/*"
			access="permitAll" />
		<security:intercept-url pattern="/css/main.css"
			access="permitAll" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/playgolf/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/course/**"
			access="hasRole('ROLE_USER')" />
	</security:http>

	<bean id="LdrbrdAuthenticationEntryPoint"
	    class="com.gffny.ldrbrd.web.auth.LdrbrdAuthenticationEntryPoint" />

	<bean class="com.gffny.ldrbrd.web.auth.AuthenticationTokenProcessingFilter"
	    id="authenticationTokenProcessingFilter">
	    <constructor-arg ref="authenticationManager" />
	</bean>

	<security:authentication-manager alias="authenticationManager" erase-credentials="true" >
		<security:authentication-provider user-service-ref="authorisationService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="passwordEncoder" 
	    class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>

<!-- WORKING AUTHENTICATION 
	<security:http auto-config="true">
		<security:intercept-url pattern="/auth/*"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/check/*"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/css/main.css"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/resources/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:intercept-url pattern="/playgolf/**"
			access="ROLE_GOLFER" />
		<security:intercept-url pattern="/course/**"
			access="ROLE_GOLFER" />
	</security:http>

	<security:authentication-manager alias="authenticationManager" erase-credentials="true" >
		<security:authentication-provider user-service-ref="authorisationService">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="passwordEncoder" 
	    class="org.springframework.security.crypto.password.StandardPasswordEncoder">
	</bean>
-->

</beans>